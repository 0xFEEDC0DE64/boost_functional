<?xml version="1.0" encoding="US-ASCII"?>
<boost xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <library>
    <key>functional</key>
    <boost-version>1.16.0</boost-version>
    <name>Functional</name>
    <authors>Mark Rodgers</authors>
    <description>The Boost.Function library contains a family of
    class templates that are function object
    wrappers.</description>
    <std-proposal>false</std-proposal>
    <std-tr1>false</std-tr1>
    <category>Function-objects</category>
  </library>
  <library>
    <key>functional/hash</key>
    <boost-version>1.33.0</boost-version>
    <name>Functional/Hash</name>
    <authors>Daniel James</authors>
    <description>A TR1 hash function object that can be extended to
    hash user defined types.</description>
    <documentation>hash/</documentation>
    <std-proposal>false</std-proposal>
    <std-tr1>true</std-tr1>
    <category>Function-objects</category>
  </library>
  <library>
    <key>functional/factory</key>
    <boost-version>1.43.0</boost-version>
    <name>Functional/Factory</name>
    <authors>Tobias Schwinger</authors>
    <description>Function object templates for dynamic and static object creation</description>
    <documentation>factory/</documentation>
    <std-proposal>false</std-proposal>
    <std-tr1>false</std-tr1>
    <category>Function-objects</category>
  </library>
  <library>
    <key>functional/forward</key>
    <boost-version>1.43.0</boost-version>
    <name>Functional/Forward</name>
    <authors>Tobias Schwinger</authors>
    <description>Adapters to allow generic function objects to accept arbitrary arguments</description>
    <documentation>forward/</documentation>
    <std-proposal>false</std-proposal>
    <std-tr1>false</std-tr1>
    <category>Function-objects</category>
  </library>
  <library>
    <key>functional/overloaded_function</key>
    <boost-version>1.50.0</boost-version>
    <name>Functional/Overloaded Function</name>
    <authors>Lorenzo Caminiti</authors>
    <description>Overload different functions into a single function
    object.</description>
    <documentation>overloaded_function/</documentation>
    <std-proposal>false</std-proposal>
    <std-tr1>false</std-tr1>
    <category>Function-objects</category>
  </library>
</boost>
